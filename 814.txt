app.post('/api/animal-filter', function (req, res) {
    let filter = req.body.filter;
    pool.connect((err, db, done) => {
        console.log('connected\n');
        if (err) {
            console.error('error fetching data\n' + err);
            res.status(500).send('error fetching data\n');
        }
        else {
            let sel = "";
            if (filter==="furry") {
                sel = "furries";
            } else if (filter==="feathery") {
                sel = "featheries";
            } else if (filter==="scaly") {
                sel = "scalies"
            }
            db.query("SELECT a.animalid, a.name, f.address FROM " + sel + " fur, animal a, fungeon f WHERE a.animalid = fur.animalid AND a.business_license_id = f.business_license_id;", (err, table) => {
                if (err) {
                    console.log('Query error!\n' + err + '\n');
                    res.status(500).send('query error!\n');
                } else {
                    if (table && table.rows && table.rows.length != 0) {
                        console.log('animals were found!\n');
                        res.status(200).send(table.rows);
                    } else {
                        console.log('combination was NOT found!\n');
                        res.status(400).send(false);
                    }
                }
            })
        }
    })
});

app.post('/api/purrents/add-animal', function (req, res) {
    let animalid = req.body.animalid
    let animaltype = req.body.animaltype
    let diet = req.body.diet
    let blid = req.body.blid
    let clinid = req.body.clinid
    let packageid = req.body.packageid
    let name = "unnamed"

    pool.connect((err, db, done) => {
        if (err) {
            console.error('error fetching data\n' + err);
            res.status(500).send();
        }
        else {
            db.query("INSERT INTO animal VALUES ($1,$2,$3,$4,$5,$6);", [animalid, name, diet, clinid, blid, packageid], (err, table) => {
                if (err) {
                    console.log('animal already exists!' + err);
                    res.status(400).send('animal already exists!');
                } else {
                    db.query("INSERT INTO " + animaltype + "(animalid) VALUES ($1);", [animalid], (err, table) => {
                        if (err) {
                            console.log('animal already exists!' + err);
                            res.status(400).send('animal already exists!');
                        } else {
                            console.log('Success!\n');
                            res.status(200).send(true);
                        }
                    })
                }
            });
        }
    })
});

app.post('/api/purrents/update-animal', function (req, res) {
    let animalid = req.body.animalid
    let animaltype = req.body.animaltype
    let diet = req.body.diet
    let blid = req.body.blid
    let clinid = req.body.clinid
    let packageid = req.body.packageid
    let name = "unnamed"

    pool.connect((err, db, done) => {
        if (err) {
            console.error('error fetching data\n' + err);
            res.status(500).send();
        }
        else {
            db.query("UPDATE animal SET dietid = $2, clinid = $3, business_license_id = $4, packageid = $5 WHERE animalid = $1;", [animalid, diet, clinid, blid, packageid], (err, table) => {
                if (err) {
                    console.log(err);
                    res.status(400).send('failed' + err);
                } else {
                    console.log('Success!\n');
                    res.status(200).send('success!');
                }
            });
        }
    })
});

app.post('/api/purrents/delete-animal', function (req, res) {
    let animalid = req.body.animalid

    pool.connect((err, db, done) => {
        if (err) {
            console.error('error fetching data\n' + err);
            res.status(500).send();
        }
        else {
            db.query("DELETE FROM animal WHERE animalid = $1;", [animalid], (err, table) => {
                if (err) {
                    console.log(err);
                    res.status(400).send(err);
                } else {
                    console.log('Success!\n');
                    res.status(200).send('Success!\n');
                }
            });
        }
    })
});

app.post('/api/purrents/delete-cust', function (req, res) {
    let custid = req.body.custid

    pool.connect((err, db, done) => {
        if (err) {
            console.error('error fetching data\n' + err);
            res.status(500).send();
        }
        else {
            db.query("DELETE FROM customer WHERE custid = $1;", [custid], (err, table) => {
                if (err) {
                    console.log(err);
                    res.status(400).send(err);
                } else {
                    console.log('Success!\n');
                    res.status(200).send('Success!\n');
                }
            });
        }
    })
});

app.post('/api/purrents/delete-purrent', function (req, res) {
    let empid = req.body.empid

    pool.connect((err, db, done) => {
        if (err) {
            console.error('error fetching data\n' + err);
            res.status(500).send();
        }
        else {
            db.query("DELETE FROM purrent_manages WHERE empid = $1;", [empid], (err, table) => {
                if (err) {
                    console.log(err);
                    res.status(400).send(err);
                } else {
                    console.log('Success!\n');
                    res.status(200).send('Success!\n');
                }
            });
        }
    })
});

app.post('/api/purrents/add', function (req, res) {
    let empid = req.body.empid
    let addr = req.body.addr
    let workerid = req.body.workerid
    let salary = req.body.salary
    let blid = req.body.blid
    let name = "unnamed"

    pool.connect((err, db, done) => {
        if (err) {
            console.error('error fetching data\n' + err);
            res.status(500).send();
        }
        else {
            db.query("INSERT INTO purrent_manages VALUES ($1,$2,$3,$4,$5,$6);", [empid, name, addr, salary, workerid, blid], (err, table) => {
                if (err) {
                    console.log(err);
                    res.status(400).send('invalid!!');
                } else {
                    console.log('Success!\n');
                    res.status(200).send(true);
                }
            });
        }
    })
});

app.post('/api/purrents/update', function (req, res) {
    let empid = req.body.empid
    let addr = req.body.addr
    let workerid = req.body.workerid
    let salary = req.body.salary
    let blid = req.body.blid

    pool.connect((err, db, done) => {
        if (err) {
            console.error('error fetching data\n' + err);
            res.status(500).send();
        }
        else {
            db.query("UPDATE purrent_manages SET address = $2, salary = $3, workerid = $4, business_license_id = $5 WHERE empid = $1;", [empid, addr, salary, workerid, blid], (err, table) => {
                if (err) {
                    console.log(err);
                    res.status(400).send('failed' + err);
                } else {
                    console.log('Success!\n');
                    res.status(200).send('success!');
                }
            });
        }
    })
});