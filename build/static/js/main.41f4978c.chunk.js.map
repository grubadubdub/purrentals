{"version":3,"sources":["components/Home.js","components/Customer/Posting.js","components/AccountCard.js","components/AccountGrid.js","components/Statistics.js","components/Customer/HomeTabs/TAnimalInfo.jsx","components/Customer/CustomerView.js","components/Purrent/EmpCard.js","components/Purrent/EmpAccount.jsx","components/Purrent/HomeTabs/TTransManagement.jsx","components/Purrent/EmpPosting.js","components/Purrent/HomeTabs/TAnimalManagement.jsx","components/Purrent/HomeTabs/TEmpManagement.jsx","components/Purrent/HomeTabs/TCustManagement.jsx","components/Purrent/HomeTabs/TSpecial.jsx","components/Purrent/HomeTabs/TTrackByPayment.jsx","components/Purrent/HomeTabs/TMaybe.jsx","components/Purrent/PurrentView.js","components/Customer/Login.js","components/Customer/Transaction/NewPurchase.jsx","components/Customer/ViewInformation.jsx/viewInvoices.jsx","components/Customer/AccManagement/CustUpdate.jsx","components/Customer/AccManagement/CustSignUp.jsx","components/Customer/ViewInformation.jsx/RedeemPurrks.jsx","components/Purrent/EmpLogin.jsx","components/Purrent/AnimalManagement/AddAnimal.jsx","components/Purrent/AnimalManagement/UpdateAnimal.jsx","components/Purrent/EmpManagement/AddEmp.jsx","components/Purrent/EmpManagement/UpdateEmp.jsx","components/Purrent/EmpManagement/DeleteEmp.jsx","components/Purrent/CustManagement/DeleteCust.jsx","components/Customer/Transaction/ThankYou.jsx","components/Purrent/CustManagement/AddCust.jsx","components/Customer/Transaction/newRental.jsx","components/Customer/ViewInformation.jsx/ViewTrans.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","align","Segment","placeholder","Grid","columns","stackable","textAlign","Divider","vertical","Row","verticalAlign","Column","Header","icon","Icon","name","react_router_dom","to","Button","primary","color","Posting","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDropdownChange","data","console","log","setState","defineProperty","value","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","state","axios","post","then","res","status","alert","animals","catch","e","stop","animalOptions","key","text","createItem","length","items","i","len","push","Item","animalid","Content","as","Description","diettype","Extra","Label","type_of_clinic","floated","custid","filter","_this2","fetch","json","anims","rows","Form","FormGroup","Field","Dropdown","type","options","onChange","Group","divided","Component","AccountCard","Card","Image","src","wrapped","ui","AccountGrid","stretched","components_AccountCard","pathname","size","Statistics","BestSellerName","undefined","BestSellerType","BestSellerFungeon","BestSellerRentalCount","WorstSellerName","WorstSellerType","WorstSellerFungeon","WorstSellerRentalCount","DueDates","BestBuyName","BestBuy_Points","BestBuy_Trans_Count","Bestgeon_Name","Bestgeon_Type","Bestgeon_Fungeon","createCard","attr1","attr2","attr3","header","Meta","extra","getTop5DueDates","bsName","bsCount","bsID","worstseller","ytd","bestperformer","bestseller","count","ytdsales","sum","body","circular","inverted","style","width","height","Subheader","TAnimalInfo","package","diet","animaltype","requested","makeFetch","error","togglePackage","prevState","toggleDiet","toggleAnimal","createTuple","info","Table","Cell","centered","checked","onClick","celled","HeaderCell","Body","CustomerView","location","Tab","menu","fluid","tabular","panes","menuItem","pane","content","Customer_Posting","TAnimalInfo_TAnimalInfo","components_AccountGrid","components_Statistics","renderActiveOnly","EmpCard","empid","EmpAccount","salary","Purrent_EmpCard","TTransManagement","search","input","transactions","searchOptions","handleTextChange","target","trans","transid","price","date","htmlFor","EmpPosting","_ref","_x","apply","arguments","TAnimalManagement","EmpPosting_EmpPosting","attached","TEmpManagement","basic","TCustManagement","address","phone_number","TSpecial","ret","start","end","FormField","TTrackByPayment","opts","visa","mc","debit","cash","toggleVisa","toggleMC","toggleDebit","toggleCash","PurrentView","TAnimalManagement_TAnimalManagement","TCustManagement_TCustManagement","TEmpManagement_TEmpManagement","TTransManagement_TTransManagement","Purrent_EmpAccount","TSpecial_TSpecial","TTrackByPayment_TTrackByPayment","Login","getID","history","sent","username","password","maxWidth","stacked","Input","iconPosition","boolOptions","payOptions","NewPurchase","mchip","insurance","paymethod","request","Request","method","Headers","Content-Type","JSON","stringify","response","Error","viewInvoices","purrks","invoiceid","payment_method","Axios","CustUpdate","pnum","CustSignUp","Checkbox","label","RedeemPurks","points_required","EmpLogin","dietOptions","blidOptions","AddAnimal","blid","clinid","packageid","UpdateAnimal","workerOptions","AddEmp","addr","workerid","phone","UpdateEmp","workertype","DeleteEmp","DeleteCust","ThankYou","AddCust","NewRental","ViewTrans","ui_test","react_router","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.41f4978c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nimport {Segment, Grid, Divider, Icon, Header, Button} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nconst Home = () => {\r\n    return(\r\n        <div>\r\n            <h1 align='center'>What type of user are you?</h1>\r\n            <Segment placeholder>\r\n\t\t\t\t<Grid columns={2} stackable textAlign='center'>\r\n\t\t\t\t\t<Divider vertical>Or</Divider>\r\n\r\n\t\t\t\t\t<Grid.Row verticalAlign='middle'>\r\n\t\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t\t\t<Header icon>\r\n\t\t\t\t\t\t\t\t<Icon name='shop' />\r\n\t\t\t\t\t\t\t</Header>\r\n\r\n\t\t\t\t\t\t\t<NavLink to='/login'>\r\n                                <Button primary> Customer </Button>\r\n                            </NavLink>\r\n\t\t\t\t\t\t\t<Divider>\r\n\t\t\t\t\t\t\t</Divider>\r\n\t\t\t\t\t\t\t<NavLink to='/customer-signup'>\r\n\t\t\t\t\t\t\t\t<Button color='pink'> Click here to Sign Up</Button>\r\n\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\r\n\t\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t\t\t<Header icon>\r\n\t\t\t\t\t\t\t\t<Icon name='world' />\r\n\t\t\t\t\t\t\t</Header>\r\n\r\n                            <NavLink to='/purrent-login'>\r\n\t\t\t\t\t\t\t    <Button primary>Purrent</Button>\r\n                            </NavLink>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Segment>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Button, Item, Label, Icon, Form, FormGroup, Dropdown } from 'semantic-ui-react';\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport axios from 'axios';\r\n//import Routes from './../Route'\r\n\r\n\r\nclass Posting extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            animals: [],\r\n            custid: this.props.custid,\r\n            filter: null\r\n        }\r\n    }\r\n\r\n    handleDropdownChange = (data) => {\r\n        console.log('in hangledrop')\r\n        this.setState({ [data.name]: data.value }, async () => {\r\n            console.log('inside set ')\r\n            console.log(this.state);\r\n            await axios.post('/api/animal-filter', data)\r\n                .then((res) => {\r\n                    if (res.status === 500) {\r\n                        alert('server side error')\r\n                    } else if (res.status === 400) {\r\n                        alert('client side error')\r\n                    } else if (res.status === 200) {\r\n                        console.log(res.data)\r\n                        this.setState({animals: res.data})\r\n                    } else (\r\n                        alert('error')\r\n                    )\r\n                }).catch(e => {\r\n                    console.log(e)\r\n                })\r\n        })\r\n\r\n\r\n    }\r\n    animalOptions = [\r\n        {\r\n            key: 'Furry',\r\n            text: 'Furry',\r\n            value: 'furry'\r\n        },\r\n        {\r\n            key: 'Feathery',\r\n            text: 'Feathery',\r\n            value: 'feathery'\r\n        },\r\n        {\r\n            key: 'Scaly',\r\n            text: 'Scaly',\r\n            value: 'scaly'\r\n        }\r\n    ]\r\n\r\n    componentDidMount() {\r\n        fetch('/api/animals')\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    res.json().then(anims => this.setState({ animals: anims.rows }))\r\n                } else {\r\n                    alert('something went wrong loading animals')\r\n                }\r\n            })\r\n    }\r\n\r\n    createItem = () => {\r\n        let animals = this.state.animals\r\n        if (animals.length > 1) {\r\n            let items = []\r\n            for (var i = 0, len = animals.length; i < len; i++) {\r\n                items.push(\r\n                    <Item key={animals[i].animalid}>\r\n                        <Item.Content>\r\n                            <Item.Header as='a'>\r\n                                {animals[i].name}\r\n                            </Item.Header>\r\n                            <Item.Description>\r\n                                {animals[i].diettype}\r\n                            </Item.Description>\r\n                            <Item.Extra>\r\n                                <Label>{animals[i].type_of_clinic}</Label>\r\n                                <Button primary floated='left'>\r\n                                    Rent\r\n                      <Icon name='right chevron' />\r\n                                </Button>\r\n                                <Button primary floated='left'>\r\n                                    Buy\r\n                      <Icon name='right chevron' />\r\n                                </Button>\r\n                            </Item.Extra>\r\n                        </Item.Content>\r\n                    </Item>)\r\n            }\r\n            return items\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form>\r\n                    <FormGroup>\r\n                        <label> Filter by animal type </label>\r\n                        <Form.Field>\r\n                            <Dropdown\r\n                                type='text'\r\n                                placeholder='Select type of animal'\r\n                                name='animaltype'\r\n                                options={this.animalOptions}\r\n                                onChange={this.handleDropdownChange}\r\n                            />\r\n                        </Form.Field>\r\n                    </FormGroup>\r\n                </Form>\r\n                <Item.Group divided>\r\n                    {this.createItem()}\r\n                </Item.Group>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Posting;","import React, {Component} from 'react';\r\nimport { Card, Image } from 'semantic-ui-react';\r\n\r\nclass AccountCard extends Component {\r\nrender(){\r\n    return(\r\n        <Card>\r\n            <Image src='http://dcsir.org/wp-content/uploads/2017/12/Screen-Shot-2017-12-16-at-7.43.20.png' wrapped ui={false} />\r\n            <Card.Content>\r\n            <Card.Header>{this.props.name}</Card.Header>\r\n            </Card.Content>\r\n        </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AccountCard;","import React, { Component } from 'react';\r\nimport AccountCard from './AccountCard';\r\nimport { Link } from 'react-router-dom';\r\nimport { Grid, Item, Button, Label, Icon, Divider, } from 'semantic-ui-react';\r\n\r\nclass AccountGrid extends Component {\r\n    state = { \r\n        custid: this.props.custid,\r\n        name: this.props.name\r\n     }\r\n\r\n    render() {\r\n        return (\r\n            <Grid columns={2} divided>\r\n                <Grid.Row stretched>\r\n\r\n                    <Grid.Column>\r\n                        <AccountCard name={this.state.name} />\r\n\r\n                        Current Purrks: None redeemed yet\r\n                    <Link to={{pathname:'/customer-redeempurrks', state: this.state.custid}}>\r\n                            <Button size='medium'>Redeem Purrks!</Button>\r\n                        </Link>\r\n                    </Grid.Column>\r\n\r\n                    <Grid.Column>\r\n                        <h2>Recent Transactions</h2>\r\n                        <Item.Group divided>\r\n                            <Item>\r\n                                <Item.Content>\r\n                                    <Item.Header as='a'>Daddy</Item.Header>\r\n                                    <Item.Description>Wants a thirsty, furry little boy uwuwuwuwuwuwuwuwu</Item.Description>\r\n                                    <Item.Extra>\r\n                                        <Label>Feathery</Label>\r\n                                        <Label color='olive'><Icon name='dollar sign' />Purr-chased</Label>\r\n                                    </Item.Extra>\r\n                                </Item.Content>\r\n                            </Item>\r\n\r\n                            <Item>\r\n                                <Item.Content>\r\n                                    <Item.Header as='a'>BDSM</Item.Header>\r\n                                    <Item.Description>I'm into BDSM; Beautiful Dogs Surrounding Me</Item.Description>\r\n                                    <Item.Extra>\r\n                                        <Label>Furry</Label>\r\n                                        <Label color='blue'><Icon name='favorite' />Rental</Label>\r\n                                        <Link to={{ pathname: '/customer-update', state: this.state.custid }}>\r\n                                            <Divider />\r\n                                            <Button color='teal'>Update Info</Button>\r\n                                        </Link>\r\n                                        <Link to={{ pathname: '/customer-transactions', state: this.state.custid }}>\r\n                                            <Button color='green'>View All Transactions</Button>\r\n                                        </Link>\r\n                                        <Link to={{ pathname: '/customer-invoices', state: this.state.custid }}>\r\n                                            <Button color='blue'>View All Invoices</Button>\r\n                                        </Link>\r\n                                    </Item.Extra>\r\n                                </Item.Content>\r\n                            </Item>\r\n                        </Item.Group>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AccountGrid;","import React, { Component } from 'react';\r\nimport { Grid, Card, Segment, Header, Icon, Divider } from 'semantic-ui-react';\r\n\r\nclass Statistics extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            bsName: null,\r\n            bsCount: null,\r\n            bsID: null,\r\n            worstseller: null,\r\n            ytd: null,\r\n            bestperformer: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('/api/best_seller')\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n\r\n                    res.json().then(bestseller => this.setState({ bsName: bestseller[0].name, bsCount: bestseller[0].count, bsID: bestseller[0].animalid }))\r\n                } else {\r\n                    // alert('something went wrong loading statistic')\r\n                }\r\n            })\r\n        fetch('/api/ytd_sales')\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    res.json().then(ytdsales => this.setState({ ytd: ytdsales[0].sum }))\r\n                } else {\r\n                    // alert('something went wrong loading statistics')\r\n                }\r\n            })\r\n        fetch('/api/fungeon_top')\r\n            .then(res => {\r\n                // console.log(res.body)\r\n                console.log(res.body)\r\n                if (res.status === 200) {\r\n                        this.setState({ bestperformer: res.body.rows }, console.log(this.state))\r\n                    } \r\n                    else {\r\n                    // alert('something went wrong loading statistics')\r\n                }\r\n            })\r\n    }\r\n    state = {\r\n        // Best Boi\r\n        BestSellerName: undefined,\r\n        BestSellerType: undefined,\r\n        BestSellerFungeon: undefined,\r\n        BestSellerRentalCount: undefined,\r\n\r\n        // Worst Boi\r\n        WorstSellerName: undefined,\r\n        WorstSellerType: undefined,\r\n        WorstSellerFungeon: undefined,\r\n        WorstSellerRentalCount: undefined,\r\n\r\n        // Due Dates\r\n        DueDates: [],\r\n\r\n        // Customer w most transactions\r\n        BestBuyName: undefined,\r\n        BestBuy_Points: undefined,\r\n        BestBuy_Trans_Count: undefined,\r\n\r\n        // Fungeon w most transactions\r\n        Bestgeon_Name: undefined,\r\n        Bestgeon_Type: undefined,\r\n        Bestgeon_Fungeon: undefined\r\n    }\r\n\r\n    // Multiple fetch calls to get pertinent data\r\n    // componentDidMount() {\r\n    //     // fetch best boi\r\n    //     fetch('/bestseller')\r\n    //         .then(res => res.json())\r\n    //         .then(bestseller => this.setState({ animals: bestseller.rows }))\r\n\r\n    //     // fetch least bought animal\r\n    //     fetch('/worst_seller')\r\n    //         .then(res => res.json())\r\n    //         .then(worstseller => this.setState({ animals: worstseller.rows }))\r\n\r\n    //     // fetch YTD sales\r\n    //     fetch('/ytd_sales')\r\n    //         .then(res => res.json())\r\n    //         .then(ytd => this.setState({ animals: ytd.rows }))\r\n\r\n    //     // fetch all curr due dates\r\n    //     fetch('/duedates')\r\n    //         .then(res => res.json())\r\n    //         .then(duedates => this.setState({ DueDates: duedates.rows }))\r\n\r\n    //     // fetch cust w highest transactions\r\n    //     fetch('/highest_bidder')\r\n    //         .then(res => res.json())\r\n    //         .then(highestbidder => this.setState({ animals: highestbidder.rows }))\r\n\r\n    //     // fetch Fungeon w most transactions/revenue\r\n    //     fetch('/best_fungeon')\r\n    //         .then(res => res.json())\r\n    //         .then(bestfungeon => this.setState({ animals: bestfungeon.rows }))\r\n    // }\r\n\r\n\r\n    // Create card for summary view\r\n    createCard = (name, attr1, attr2, attr3) => {\r\n        let card = (\r\n            <Card>\r\n                <Card.Content header={name} />\r\n                <Card.Content>\r\n                    <Card.Meta><span>{attr1}</span></Card.Meta>\r\n                    <Card.Meta><span>{attr2}</span></Card.Meta>\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                    <Icon name='user' />\r\n                    {attr3}\r\n                </Card.Content>\r\n            </Card>)\r\n\r\n        return card;\r\n    }\r\n\r\n    getTop5DueDates = () => {\r\n        let dues = this.state.DueDates;\r\n        let dates = [];\r\n\r\n        for (let i = 0; i <= 5; i++) {\r\n            //dates.push(this.createCard(dues[i].name, dues[i].fungeon, dues[i].duedate, dues[i].customer)); \r\n        }\r\n\r\n        return dates;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid columns={3} divided>\r\n                <Grid.Row stretched>\r\n\r\n                    <Grid.Column>\r\n                        <h3>Best Boi</h3> <Divider />\r\n                        {this.createCard('Piece of Shit', 'Furry', 'Sux cock', '69 rentals')}\r\n\r\n                        <h3>Needs to be bought more Boi</h3> <Divider />\r\n                        {this.createCard('Mike Litoris', 'Feathery', 'Moist', '69 pounds')}\r\n                    </Grid.Column>\r\n\r\n                    <Grid.Column>\r\n                        <h3>Upcoming Due Dates</h3> <Divider />\r\n                        <Card.Group>\r\n                            {this.createCard('Ho Li Fuk', 'From Fungeon x', 'Due by', 'Rented by')}\r\n                            {this.createCard('Kyons Dildo', 'From fungeon y', 'Due by', 'Who rented me')}\r\n                            {this.createCard('Gag Ball', 'From my sex dungeon', 'Due by', 'Who rented this shit')}\r\n                        </Card.Group>\r\n                    </Grid.Column>\r\n\r\n                    <Grid.Column>\r\n                        <div>\r\n                            <Segment circular inverted color='olive' style={{ width: 175, height: 175 }}>\r\n                                <Header as='h2' inverted>\r\n                                    YTD Sales\r\n                                <Header.Subheader>${this.state.ytd}</Header.Subheader>\r\n                                </Header>\r\n                            </Segment>\r\n                        </div>\r\n\r\n                        <h3>Greatest Sale</h3> <Divider />\r\n                        {this.createCard(this.state.bsName, 'Animal ID:', this.state.bsID, this.state.bsCount)}\r\n\r\n                        <h3>Highest Sales Fungeon</h3> <Divider />\r\n                        {this.createCard('Sum Ting Wong', 'From Fungeon x', 'Due by', 'Rented by')}\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Statistics;","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { Grid, Input, Form, Label, Button, Radio, FormGroup, Table, Icon, Menu, Header } from 'semantic-ui-react';\r\nimport { BrowserRouter, Link } from \"react-router-dom\";\r\n\r\nexport default class TAnimalInfo extends Component {\r\n    state = {\r\n        package: false,\r\n        diet: false,\r\n        animaltype: false,\r\n        requested: []\r\n    }\r\n\r\n    makeFetch = async (data) => {\r\n        await axios.post('/api/customers/misc-animal-info', data)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    console.log(res.data)\r\n                    this.setState({ requested: res.data })\r\n                } if (res.status === 500) {\r\n                    alert('server side error')\r\n                } else if (res.status === 400) {\r\n                    alert('client side error')\r\n                }\r\n            }).catch(error => {\r\n                console.error(error);\r\n            });\r\n\r\n    }\r\n    togglePackage = (e) => {\r\n        console.log(this.state)\r\n        this.setState(prevState => ({ package: !prevState.package }))\r\n    }\r\n    toggleDiet = (e) => {\r\n        console.log(this.state)\r\n        this.setState(prevState => ({ diet: !prevState.diet }))\r\n    }\r\n    toggleAnimal = (e) => {\r\n        console.log(this.state)\r\n        this.setState(prevState => ({ animaltype: !prevState.animaltype }))\r\n    }\r\n\r\n\r\n    createTuple = () => {\r\n        let info = this.state.requested\r\n        if (info.length > 1) {\r\n            let items = []\r\n            for (var i = 0, len = info.length; i < len; i++) {\r\n                items.push(\r\n                    <Table.Row key={i}>\r\n                        <Table.Cell>\r\n                            {info[i].info}\r\n                        </Table.Cell>\r\n                        <Table.Cell>\r\n                            {info[i].diettype}\r\n                        </Table.Cell>\r\n                        <Table.Cell>    \r\n                            {info[i].animaltype}\r\n                        </Table.Cell>\r\n                    </Table.Row>)\r\n            }\r\n            return items\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid>\r\n                <Grid.Row centered>\r\n                    <Header> Browse Misc Animal Information! </Header>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Form.Field>\r\n                                <label>Care Package Collection</label>\r\n                                <input\r\n                                    type='radio'\r\n                                    value={this.state.package}\r\n                                    name='package'\r\n                                    checked={this.state.package}\r\n                                    onClick={this.togglePackage} />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>Diet Types</label>\r\n                                <input\r\n                                    type='radio'\r\n                                    value={this.state.diet}\r\n                                    name='diet'\r\n                                    checked={this.state.diet}\r\n                                    onClick={this.toggleDiet} />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>Animal Varieties</label>\r\n                                <input\r\n                                    type='radio'\r\n                                    value={this.state.animaltype}\r\n                                    name='animaltype'\r\n                                    checked={this.state.animaltype}\r\n                                    onClick={this.toggleAnimal} />\r\n                            </Form.Field>\r\n                        </FormGroup>\r\n                        <Button color='olive' onClick={() => this.makeFetch(this.state)}> Project Info Selected </Button>\r\n                    </Form>\r\n                    <Table celled>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell>Care Package</Table.HeaderCell>\r\n                                <Table.HeaderCell> Diets </Table.HeaderCell>\r\n                                <Table.HeaderCell>Animal Types</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                            {this.createTuple()}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </Grid.Row>\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n}","import React, { Component } from 'react';\r\nimport Posting from './Posting';\r\nimport AccountGrid from '../AccountGrid';\r\nimport Statistics from '../Statistics';\r\n\r\nimport { Tab } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport TAnimalInfo from './HomeTabs/TAnimalInfo';\r\n\r\nclass CustomerView extends Component {\r\n    state = { \r\n        custid: this.props.location.state.custid,\r\n        name: this.props.location.state.name\r\n         }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Tab\r\n                menu={{ fluid: true, vertical: true, tabular: true }}\r\n                panes={[\r\n                    {\r\n                        menuItem: 'Browse Animals',\r\n                        pane: {\r\n                            key: 'animals',\r\n                            content: (\r\n                                <div><Posting custid={this.state.custid} name={this.state.name} /></div>\r\n                            ),\r\n                        },\r\n                    },\r\n                    {\r\n                        menuItem: 'Browse Animal Information',\r\n                        pane: {\r\n                            key: 'animalinfo',\r\n                            content: (\r\n                                <div><TAnimalInfo custid={this.state.custid} name={this.state.name} /></div>\r\n                            ),\r\n                        },\r\n                    },\r\n                    {\r\n                        menuItem: 'My Account',\r\n                        pane: {\r\n                            key: 'account',\r\n                            content: (\r\n                                <div><AccountGrid custid={this.state.custid} name={this.state.name} /></div>\r\n                            ),\r\n                        },\r\n                    },\r\n                    {\r\n                        menuItem: 'Statistics',\r\n                        pane: {\r\n                            key: 'stats',\r\n                            content: (\r\n                                <div><Statistics /></div>\r\n                            ),\r\n                        },\r\n                    },\r\n                ]}\r\n                renderActiveOnly={false} />);\r\n    }\r\n}\r\nexport default CustomerView;","import React, { Component } from 'react';\r\nimport { Card, Image } from 'semantic-ui-react';\r\n\r\nclass EmpCard extends Component {\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <Image src='https://66.media.tumblr.com/b8e33b75c6be626ed92b174f7b73bbc5/tumblr_pn9fbhg7Ee1qdqnr9_540.jpg' wrapped ui={false} />\r\n                <Card.Content>\r\n                    <Card.Header>{this.props.empid}</Card.Header>\r\n                </Card.Content>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EmpCard;","import React, { Component } from 'react';\r\nimport EmpCard from './EmpCard';\r\nimport { Link } from 'react-router-dom';\r\nimport { Grid, Item, Button, Label, Icon, Divider, } from 'semantic-ui-react';\r\n\r\nclass EmpAccount extends Component {\r\n    state = { \r\n        empid: this.props.empid,\r\n        salary: 100,\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid columns={2} divided>\r\n                <Grid.Row stretched>\r\n\r\n                    <Grid.Column>\r\n                        <EmpCard empid={this.state.empid} />\r\n\r\n                    <Link to={{pathname: 'update-purrent', state: this.state.empid}}>\r\n                            <Button size='medium'>\r\n                                Update Info\r\n                            </Button>\r\n                        </Link>\r\n                    </Grid.Column>\r\n\r\n                    <Grid.Column>\r\n                        <h2>Salary</h2>\r\n                        {this.state.salary}\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EmpAccount;","import React, { Component } from 'react'\r\nimport { Dropdown, Button, Form, Table, Header } from 'semantic-ui-react';\r\nimport axios from 'axios'\r\n\r\nexport default class TTransManagement extends Component {\r\n    state = {\r\n            search: '',\r\n            input: '',\r\n            transactions: [],\r\n        }\r\n    \r\n    searchOptions = [\r\n        { key: 'name', text: 'Customer Name', value: 'c.name' },\r\n        { key: 'custid', text: 'Customer ID', value: 'custid' },\r\n        { key: 'transid', text: 'Transaction ID', value: 't.transid' }\r\n    ]\r\n    \r\n    handleDropdownChange = (e, data) => {\r\n        this.setState({ [data.name]: data.value }, console.log(this.state))\r\n\r\n    }\r\n    handleTextChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value }, console.log(this.state))\r\n    }\r\n    makeFetch = async (data) => {\r\n        console.log(data)\r\n        await axios.post('/api/transactions-all', data)\r\n            .then(res => {\r\n                // console.log(e)\r\n                console.log(res.data)\r\n                if (res.status === 200) {\r\n                   console.log(res.data)\r\n                    this.setState({transactions: res.data})\r\n                    /*do something wih response.json()*/\r\n                    // console.log(response)\r\n                    // return response.json();\r\n                } if (res.status === 500) {\r\n                    alert('server side error')\r\n                } else if (res.status === 400) {\r\n                    alert('client side error')\r\n                }\r\n            }).catch(error => {\r\n                console.error(error);\r\n            });\r\n\r\n    }\r\n\r\n    createItem = () => {\r\n        let trans = this.state.transactions\r\n        if (trans.length > 1) {\r\n            let items = []\r\n            for (var i = 0, len = trans.length; i < len; i++) {\r\n                items.push(\r\n                    <Table.Row key={trans[i].transid}>\r\n                    <Table.Cell>{trans[i].transid}</Table.Cell>\r\n                    <Table.Cell>{trans[i].price}</Table.Cell>\r\n                    <Table.Cell>{trans[i].date}</Table.Cell>\r\n                    <Table.Cell>{trans[i].animalid}</Table.Cell>\r\n                    <Table.Cell>{trans[i].custid}</Table.Cell>\r\n                    </Table.Row>\r\n                  )\r\n            }\r\n            return items\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Form>\r\n                <Form.Field>\r\n                            <label htmlFor='search'>Search by:</label>\r\n                            <Dropdown\r\n                                type='text'\r\n                                placeholder='Select type of data to search'\r\n                                name='search'\r\n                                options={this.searchOptions}\r\n                                onChange={this.handleDropdownChange}\r\n                            />\r\n                        </Form.Field>\r\n                <Form.Field>\r\n                    <label htmlFor='input'>Search value:</label>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Search value'\r\n                        name='input'\r\n                        onChange={this.handleTextChange} />\r\n                </Form.Field>\r\n                <Button onClick={() => {\r\n                    console.log(this.state)\r\n                    this.makeFetch(this.state)\r\n                }}> Search </Button>\r\n            </Form>\r\n            <div>\r\n                <Header>display all transactions for dis customer</Header>\r\n                <h1>{this.state.custid}</h1>\r\n                <Table celled>\r\n                <Table.Header>\r\n                  <Table.Row>\r\n                    <Table.HeaderCell>Transaction ID</Table.HeaderCell>\r\n                    <Table.HeaderCell>Price</Table.HeaderCell>\r\n                    <Table.HeaderCell>Date</Table.HeaderCell>\r\n                    <Table.HeaderCell>Animal ID</Table.HeaderCell>\r\n                    <Table.HeaderCell>Customer ID</Table.HeaderCell>\r\n                  </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                  {this.createItem()}\r\n                </Table.Body>\r\n              </Table>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Button, Item, Icon, Label, Form, FormGroup, Dropdown } from 'semantic-ui-react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport axios from 'axios'\r\n//import Routes from './../Route'\r\n\r\nexport default class EmpPosting extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            animals: [],\r\n            empid: this.props.empid,\r\n            filter: null,\r\n        }\r\n    }\r\n\r\n    handleDropdownChange = async (data) => {\r\n        // this.setState({ [data.name]: data.value }, async () => {\r\n        //     console.log(this.state);\r\n        //     // const { history } = this.props\r\n        //     await axios.post('/api/animal-filter', data)\r\n        //         .then((res) => {\r\n        //             if (res.status === 500)\r\n        //                 alert('server side error')\r\n        //             else if (res.status === 400) \r\n        //                 alert('client side error')\r\n        //             else if (res.status === 200)\r\n        //                 console.log('nice')\r\n        //             else\r\n        //                 alert('error')\r\n        //         }).catch(e => {\r\n        //             console.log(e)\r\n        //         })\r\n        // })\r\n        await axios.post('/api/animal-filter', data)\r\n            .then(res => {\r\n                if (res.status === 500)\r\n                    alert('server side error')\r\n                else if (res.status === 400) \r\n                    alert('client side error')\r\n                else if (res.status === 200)\r\n                    console.log('nice')\r\n                else\r\n                    alert('error')\r\n            }).catch(e => {\r\n                console.log(e)\r\n            });\r\n\r\n    }\r\n\r\n    \r\n    animalOptions = [\r\n        {\r\n            key: 'Furry',\r\n            text: 'Furry',\r\n            value: 'furry'\r\n        },\r\n        {\r\n            key: 'Feathery',\r\n            text: 'Feathery',\r\n            value: 'feathery'\r\n        },\r\n        {\r\n            key: 'Scaly',\r\n            text: 'Scaly',\r\n            value: 'scaly'\r\n        }\r\n    ]\r\n\r\n    componentDidMount() {\r\n        fetch('/api/animals')\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    res.json().then(anims => this.setState({ animals: anims.rows }))\r\n                } else {\r\n                    alert('something went wrong loading animals')\r\n                }\r\n            })\r\n    }\r\n    createItem = () => {\r\n        let animals = this.state.animals\r\n        if (animals.length > 1) {\r\n            let items = []\r\n            for (var i = 0, len = animals.length; i < len; i++) {\r\n                items.push(\r\n                    <Item key={animals[i].animalid}>\r\n                        <Item.Content>\r\n                            <Item.Header as='a'>\r\n                                {animals[i].name}\r\n                            </Item.Header>\r\n                            <Item.Description>\r\n                                {animals[i].diettype}\r\n                            </Item.Description>\r\n                            <Item.Extra>\r\n                                <Label>{animals[i].type_of_clinic}</Label>\r\n                        </Item.Extra>\r\n                        {/* <Item.Content>\r\n                            {animals[i].}\r\n                        </Item.Content> */}\r\n                        </Item.Content>\r\n                    </Item>)\r\n            }\r\n            return items\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form>\r\n                    <FormGroup>\r\n                        <label> Filter by animal type </label>\r\n                        <Form.Field>\r\n                            <Dropdown\r\n                                type='text'\r\n                                placeholder='Select type of animal'\r\n                                name='animaltype'\r\n                                options={this.animalOptions}\r\n                                onChange={this.handleDropdownChange}\r\n                            />\r\n                        </Form.Field>\r\n                    </FormGroup>\r\n                </Form>\r\n                <Item.Group divided>\r\n                    {this.createItem()}\r\n                </Item.Group>\r\n                {/* <Routes/> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Button} from 'semantic-ui-react';\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport EmpPosting from '../EmpPosting';\r\n\r\nexport default class TAnimalManagement extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                    <EmpPosting />\r\n                    <Button.Group attached='bottom'>\r\n                        <Link to='/new-animal'>\r\n                            <Button color='pink'>Add New Animal</Button>\r\n                        </Link>\r\n                        <NavLink to='/update-animal'>            \r\n                        <Button color='violet'>\r\n                        Update an Animal\r\n                        </Button>\r\n                    </NavLink>\r\n                    </Button.Group>\r\n                </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Button, Item, Label } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class TEmpManagement extends Component {\r\n    state = {\r\n        animals: [],\r\n        empid: this.props.empid,\r\n        filter: null,\r\n    }\r\n    // componentDidMount() {\r\n    //     fetch('/api/all-purrents')\r\n    //         .then(res => {\r\n    //             if (res.status === 200) {\r\n    //                 console.log(res.data)\r\n    //                 res.json().then(anims => this.setState({ animals: anims.rows }))\r\n    //             } else {\r\n    //                 alert('something went wrong loading animals')\r\n    //             }\r\n    //         })\r\n    // }    \r\n    // createItem = () => {\r\n    //     console.log(this.state)\r\n    //     let animals = this.state.animals\r\n    //     if (animals.length > 1) {\r\n    //         let items = []\r\n    //         for (var i = 0, len = animals.length; i < len; i++) {\r\n    //             items.push(\r\n    //                 <Item key={animals[i].id}>\r\n    //                     <Item.Content>\r\n    //                         <Item.Header as='a'>\r\n    //                             {animals[i].name}\r\n    //                         </Item.Header>\r\n    //                         <Item.Description>\r\n    //                             {animals[i].address}\r\n    //                         </Item.Description>\r\n    //                         <Item.Description>\r\n    //                             {animals[i].custid}\r\n    //                         </Item.Description>\r\n    //                         <Item.Extra>\r\n    //                             <Label>Phone: {animals[i].phone_number}</Label>\r\n    //                     </Item.Extra>\r\n    //                     {/* <Item.Content>\r\n    //                         {animals[i].}\r\n    //                     </Item.Content> */}\r\n    //                     </Item.Content>\r\n    //                 </Item>)\r\n    //         }\r\n    //         return items\r\n    //     }\r\n    // };\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Item.Group divided>\r\n            {/* {this.createItem()} */}\r\n            </Item.Group>\r\n            <div>\r\n            <Button.Group basic attached='bottom'>\r\n                    <Link to='/new-purrent'>\r\n                        <Button>Add</Button>\r\n                    </Link>\r\n                    <Link to={{pathname: '/update-purrent', state: this.state.empid}}>\r\n                        <Button>Update</Button>\r\n                    </Link>\r\n                    <Link to='/remove-purrent'>\r\n                        <Button>Delete</Button>\r\n                    </Link>\r\n\r\n                </Button.Group>\r\n            {/* </Button.Group> */}\r\n            </div>\r\n            // </div>\r\n        )\r\n        \r\n    }\r\n   \r\n}","import React, { Component } from 'react'\r\nimport { Button, Item, Label, } from 'semantic-ui-react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default class TCustManagement extends Component {\r\n    state = {\r\n        animals: [],\r\n        empid: this.props.empid,\r\n        filter: null,\r\n    }\r\n    componentDidMount() {\r\n        fetch('/api/customers')\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    res.json().then(anims => this.setState({ animals: anims.rows }))\r\n                } else {\r\n                    alert('something went wrong loading animals')\r\n                }\r\n            })\r\n    }    \r\n    createItem = () => {\r\n        let animals = this.state.animals\r\n        if (animals.length > 1) {\r\n            let items = []\r\n            for (var i = 0, len = animals.length; i < len; i++) {\r\n                items.push(\r\n                    <Item key={animals[i].custid}>\r\n                        <Item.Content>\r\n                            <Item.Header as='a'>\r\n                                {animals[i].name}\r\n                            </Item.Header>\r\n                            <Item.Description>\r\n                                {animals[i].address}\r\n                            </Item.Description>\r\n                            <Item.Description>\r\n                                {animals[i].custid}\r\n                            </Item.Description>\r\n                            <Item.Extra>\r\n                                <Label>Phone: {animals[i].phone_number}</Label>\r\n                        </Item.Extra>\r\n                        {/* <Item.Content>\r\n                            {animals[i].}\r\n                        </Item.Content> */}\r\n                        </Item.Content>\r\n                    </Item>)\r\n            }\r\n            return items\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Item.Group divided>\r\n            {this.createItem()}\r\n            </Item.Group>\r\n            <div>\r\n                <Button.Group attached='bottom'>\r\n                <NavLink to='/add-customer'>\r\n                    <Button fluid>Add</Button>\r\n                </NavLink>\r\n                <NavLink to='/remove-customer'>\r\n                    <Button >Remove</Button>\r\n                </NavLink>\r\n            </Button.Group>\r\n            </div>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Grid, Form, FormField, Label, Header, FormGroup, Button, Table } from \"semantic-ui-react\";\r\nimport axios from 'axios'\r\nexport default class TSpecial extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      custid: null,\r\n      start: null,\r\n      end: null,\r\n      ret: null\r\n    }\r\n  }\r\n\r\n  makeFetch = async (data) => {\r\n    console.log(data)\r\n    await axios.post('/api/rental-between-dates')\r\n        .then(res => {\r\n          console.log(res)\r\n            if (res.status === 200) {\r\n               console.log(res.data)\r\n               this.setState({ret: res.data})\r\n            } if (res.status === 500) {\r\n                alert('server side error')\r\n            } else if (res.status === 400) {\r\n                alert('client side error')\r\n            }\r\n        }).catch(error => {\r\n            console.error(error);\r\n        });\r\n\r\n}\r\n\r\n  handleTextChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        <Grid.Row centered>\r\n          <Form>\r\n            <Header> Who Rented What During When????? </Header>\r\n            <FormGroup>\r\n              <FormField>\r\n                <label> Customer ID: </label>\r\n                <input\r\n                  type='text'\r\n                  name='custid'\r\n                  placeholder='Enter a Customer ID'\r\n                  onChange={this.handleTextChange}\r\n                />\r\n              </FormField>\r\n              <FormField>\r\n                <label> Start Date: </label>\r\n                <input\r\n                  type='text'\r\n                  name='start'\r\n                  placeholder='(YYYY-MM-DD)'\r\n                  onChange={this.handleTextChange}\r\n                />\r\n              </FormField>\r\n              <FormField>\r\n                <label> End Date: </label>\r\n                <input\r\n                  type='text'\r\n                  name='end'\r\n                  placeholder='(YYYY-MM-DD)'\r\n                  onChange={this.handleTextChange}\r\n                />\r\n              </FormField>\r\n            </FormGroup>\r\n            <Button onClick={() => this.makeFetch(this.state)}> Find Names </Button>\r\n          </Form>\r\n          <Table celled size='small'>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell>Animal Name</Table.HeaderCell>\r\n                <Table.HeaderCell>Start Date: </Table.HeaderCell>\r\n                <Table.HeaderCell> End Date: </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  ho li fuk\r\n        </Table.Cell>\r\n                <Table.Cell>\r\n                  2018-01-02\r\n        </Table.Cell>\r\n                <Table.Cell>\r\n                  2018-02-01\r\n        </Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>ho my fuk</Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>hwat le fuk</Table.Cell>\r\n              </Table.Row>\r\n            </Table.Body>\r\n          </Table>\r\n        </Grid.Row>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n}","import React, { Component } from 'react'\r\nimport { Grid, Header, Form, FormGroup, Button, Table } from 'semantic-ui-react';\r\nimport axios from 'axios'\r\nexport default class TTrackByPayment extends Component {\r\n    constructor() {\r\n        super()\r\n        this. state = {\r\n            visa: false,\r\n            mc: false,\r\n            debit: false,\r\n            cash: false,\r\n            transactions: []\r\n        }\r\n    }\r\n\r\n    makeFetch = async (data) => {\r\n        console.log(data)\r\n        var opts = {\r\n            visa: '',\r\n            mc: '',\r\n            debit: '',\r\n            cash: '',\r\n        }\r\n        if (this.state.visa) {\r\n            opts.visa = \"Visa\"\r\n        } if (this.state.mc) {\r\n            opts.mc = \"MasterCard\"\r\n        } if (this.state.debit) {\r\n            opts.debit = \"Debit\"\r\n        } if (this.state.cash) {\r\n            opts.cash = \"Cash\"\r\n        }\r\n        await axios.post('/api/div-payment-method', opts)\r\n            .then(res => {\r\n                console.log(res.status)\r\n                if (res.status === 200) {\r\n                    this.setState({transactions: res.data})\r\n                } if (res.status === 500) {\r\n                    alert('server side error')\r\n                } else if (res.status === 400) {\r\n                    alert('client side error')\r\n                }\r\n            }).catch(error => {\r\n                console.error(error);\r\n            });\r\n\r\n    }\r\n    toggleVisa = (e) => {\r\n        console.log(this.state)\r\n        this.setState(prevState => ({ visa: !prevState.visa }))\r\n    }\r\n    toggleMC = (e) => {\r\n        console.log(this.state)\r\n        this.setState(prevState => ({ mc: !prevState.mc }))\r\n    }\r\n    toggleDebit = (e) => {\r\n        console.log(this.state)\r\n        this.setState(prevState => ({ debit: !prevState.debit }))\r\n    }\r\n    toggleCash = (e) => {\r\n        console.log(this.state)\r\n        this.setState(prevState => ({ cash: !prevState.cash }))\r\n    }\r\n\r\n    createItem = () => {\r\n        let trans = this.state.transactions\r\n        if (trans.length > 1) {\r\n            let items = []\r\n            for (var i = 0, len = trans.length; i < len; i++) {\r\n                items.push(\r\n                    <Table.Row key={trans[i].custid}>\r\n                    <Table.Cell>{trans[i].custid}</Table.Cell>\r\n                    <Table.Cell>{trans[i].price}</Table.Cell>\r\n                    <Table.Cell>{trans[i].date}</Table.Cell>\r\n                    <Table.Cell>{trans[i].animalid}</Table.Cell>\r\n                    <Table.Cell>{trans[i].custid}</Table.Cell>\r\n                    </Table.Row>\r\n                  )\r\n            }\r\n            return items\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <Grid>\r\n                <Grid.Row centered>\r\n                    <Form>\r\n                        <Header> Find Customers Who Only Pay With..</Header>\r\n                        <FormGroup>\r\n                            <Form.Field>\r\n                                <label>Visa</label>\r\n                                <input\r\n                                    type='radio'\r\n                                    value={this.state.visa}\r\n                                    name='visa'\r\n                                    checked={this.state.visa}\r\n                                    onClick={this.toggleVisa} />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>MasterCard</label>\r\n                                <input\r\n                                    type='radio'\r\n                                    value={this.state.mc}\r\n                                    name='mc'\r\n                                    checked={this.state.mc}\r\n                                    onClick={this.toggleMC} />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>Debit</label>\r\n                                <input\r\n                                    type='radio'\r\n                                    value={this.state.debit}\r\n                                    name='debit'\r\n                                    checked={this.state.debit}\r\n                                    onClick={this.toggleDebit} />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>Cash</label>\r\n                                <input\r\n                                    type='radio'\r\n                                    value={this.state.cash}\r\n                                    name='cash'\r\n                                    checked={this.state.cash}\r\n                                    onClick={this.toggleCash} />\r\n                            </Form.Field>\r\n                        </FormGroup>\r\n                        <Button onClick={() => this.makeFetch(this.state)}> Find Customers </Button>\r\n                    </Form>\r\n                </Grid.Row>\r\n                <Table celled>\r\n                <Table.Header>\r\n                  <Table.Row>\r\n                    <Table.HeaderCell>Customer ID</Table.HeaderCell>\r\n                    {/* <Table.HeaderCell>Start Date</Table.HeaderCell> */}\r\n                    {/* <Table.HeaderCell>End Date</Table.HeaderCell> */}\r\n                \r\n                  </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                  {this.createItem()}\r\n                </Table.Body>\r\n              </Table>\r\n            </Grid>\r\n\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Grid, Header, Form, FormGroup, FormField } from 'semantic-ui-react';\r\n\r\nexport default class Maybe extends Component {\r\n    state = {\r\n        pnum: false,\r\n        addr: false,\r\n        end: null,\r\n    }\r\n    togglePnum = (e) => {\r\n        console.log(this.state)\r\n        this.setState(prevState => ({ pnum: !prevState.pnum }))\r\n    }\r\n    toggleAddr = (e) => {\r\n        console.log(this.state)\r\n        this.setState(prevState => ({ addr: !prevState.addr }))\r\n    }\r\n    handleTextChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n    render(){\r\n        return(\r\n            <Grid>\r\n                <h> we probably do not need this</h>\r\n                <Grid.Row centered>\r\n                    <Form>\r\n                    <Header> Track down customers by due date</Header>\r\n                    <p> Select Customer Information Wanted </p>\r\n                    <FormGroup>\r\n                        \r\n                        <Form.Field>\r\n                            <label>Phone Number</label>\r\n                            <input\r\n                                type='radio'\r\n                                value={this.state.pnum}\r\n                                name='pnum'\r\n                                checked={this.state.pnum}\r\n                                onClick={this.togglePnum} />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Address</label>\r\n                            <input\r\n                                type='radio'\r\n                                value={this.state.addr}\r\n                                name='addr'\r\n                                checked={this.state.addr}\r\n                                onClick={this.toggleAddr} />\r\n                        </Form.Field>\r\n                        <FormField>\r\n                            <label> Due Date: </label>\r\n                            <input\r\n                                type='text'\r\n                                name='end'\r\n                                placeholder='(YYYY-MM-DD)'\r\n                                onChange={this.handleTextChange}\r\n                            />\r\n                            </FormField>\r\n                        </FormGroup>\r\n                        </Form>\r\n                </Grid.Row>\r\n            </Grid>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport EmpAccount from './EmpAccount';\r\n\r\nimport { Tab } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport TTransManagement from './HomeTabs/TTransManagement'\r\nimport TAnimalManagement from './HomeTabs/TAnimalManagement';\r\nimport TEmpManagement from './HomeTabs/TEmpManagement';\r\nimport TCustManagement from './HomeTabs/TCustManagement';\r\nimport Statistics from '../Statistics';\r\nimport TSpecial from './HomeTabs/TSpecial';\r\nimport Maybe from './HomeTabs/TMaybe';\r\nimport TTrackByPayment from './HomeTabs/TTrackByPayment';\r\n\r\nclass PurrentView extends Component {\r\n    state = {empid: this.props.location.state}\r\n    \r\n    render() {\r\n        return (<Tab\r\n            menu={{ fluid: true, vertical: true, tabular: true }}\r\n            panes={[\r\n                {\r\n                    menuItem: 'Manage Animals',\r\n                    pane: {\r\n                        key: 'modAnimals',\r\n                        content: (\r\n                            <TAnimalManagement />\r\n                        ),\r\n                    },\r\n                },\r\n                {\r\n                    menuItem: 'Manage Customers',\r\n                    pane: {\r\n                        key: 'modCustomers',\r\n                        content: (\r\n                            <TCustManagement />\r\n                        ),\r\n                    },\r\n                },\r\n                {\r\n                    menuItem: 'Manage Employees',\r\n                    pane: {\r\n                        key: 'modEmployees',\r\n                        content: (\r\n                            <TEmpManagement empid={this.state.empid}/>\r\n                        ),\r\n                    },\r\n                },\r\n                {\r\n                    menuItem: 'Manage Transactions',\r\n                    pane: {\r\n                        key: 'modEmployee',\r\n                        content: (\r\n                            <TTransManagement />\r\n                        ),\r\n                    },\r\n                },\r\n                {\r\n                    menuItem: 'My Account',\r\n                    pane: {\r\n                        key: 'account',\r\n                        content: (\r\n                            <div><EmpAccount empid={this.state.empid}/></div>\r\n                        ),\r\n                    },\r\n                },\r\n                {\r\n                    menuItem: 'Search Animals Rented Between Dates',\r\n                    pane: {\r\n                        key: 'searchanimal',\r\n                        content: (\r\n                            <div><TSpecial /></div>\r\n                        ),\r\n                    },\r\n                },\r\n                {\r\n                    menuItem: 'Track Customers By Payment Method',\r\n                    pane: {\r\n                        key: 'searchcust',\r\n                        content: (\r\n                            <div><TTrackByPayment /></div>\r\n                        ),\r\n                    },\r\n                },\r\n                {\r\n                    menuItem: 'Statistics',\r\n                    pane: {\r\n                        key: 'stats',\r\n                        content: (\r\n                            <div><Statistics /></div>\r\n                        ),\r\n                    },\r\n                },\r\n            ]}\r\n            renderActiveOnly={false} />);\r\n    }\r\n}\r\n\r\nexport default PurrentView;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button, Grid, Header, Message, Image, Segment } from 'semantic-ui-react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { async } from 'q';\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      name: ''\r\n    }\r\n  }\r\n  getID = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  makeFetch = async (data) => {\r\n    const { history } = this.props\r\n    const res = await axios.post('/api/customers/login', data);\r\n    if (res.status === 500) {\r\n      alert(\"some thing is wrong, try again\")\r\n    } else {\r\n      if (res.status === 200) {\r\n        this.setState({ name: res.data[0].username })\r\n        // console.log('cust id: ' + res.data[0].custid + ', name: ' + this.state.name)\r\n        this.props.history.push({\r\n          pathname: '/customer',\r\n          state: { \r\n            custid: res.data[0].custid,\r\n            name: this.state.name }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n    <Grid.Column style={{ maxWidth: 450 }}>\r\n      <Header as='h2' color='grey' textAlign='center'>\r\n        <Image src='/logo.png' size='massive'/>\r\n      </Header>\r\n      <Form size='large'>\r\n        <Segment stacked color='grey'>\r\n          <Form.Input \r\n            fluid \r\n            icon='user' \r\n            iconPosition='left' \r\n            placeholder='Username' \r\n            name='username'\r\n            onChange={this.getID}/>\r\n          <Form.Input\r\n            fluid\r\n            icon='lock'\r\n            name='password'\r\n            iconPosition='left'\r\n            placeholder='Password'\r\n            type='password'\r\n            onChange={this.getID}/>\r\n          <Button onClick={() => this.makeFetch(this.state)} color='grey' fluid size='large'>\r\n            Login\r\n          </Button>\r\n        </Segment>\r\n      </Form>\r\n    </Grid.Column>\r\n</Grid>\r\n    );\r\n  };\r\n}","import React, { Component } from 'react'\r\nimport { Button, Form, Grid, Header, Dropdown } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst boolOptions = [\r\n    { key: 1, text: 'Yes', value: 1 },\r\n    { key: 0, text: 'No', value: 0 }\r\n]\r\n\r\nconst payOptions = [\r\n    { key: 'visa', value: 'visa', text: 'Visa' },\r\n    { key: 'mc', value: 'mc', text: 'Mastercard' },\r\n    { key: 'debit', value: 'debit', text: 'Debit' }\r\n]\r\n\r\nclass NewPurchase extends Component {\r\n    state = {\r\n        custid: null,\r\n        animalid: null,\r\n        date: null,\r\n        mchip: 0,\r\n        insurance: 0,\r\n        paymethod: null,\r\n    }\r\n\r\n    handleTextChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n    handleDropdownChange = (data) => {\r\n        this.setState({ [data.name]: data.value })\r\n    }\r\n    makeFetch(data) {\r\n        console.log(data);\r\n        var request = new Request('http://localhost:3000/api/customers/new-purrchase', {\r\n            method: 'PUT',\r\n            header: new Headers({ 'Content-Type': 'application/json' }),\r\n            body: JSON.stringify(data)\r\n        });\r\n        fetch(request)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    console.log(response)\r\n                    return response.json();\r\n                } else {\r\n                    throw new Error('Something went wrong on api server!');\r\n                }\r\n            }).catch(error => {\r\n                console.error(error);\r\n            });\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Grid>\r\n                <Grid.Row centered>\r\n                    <Header />\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label>CustID:</label>\r\n                            <input placeholder={this.props.location.state} name='custid' onChange={this.handleTextChange} />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>AnimalID:</label>\r\n                            <input type='text' name='animalid' placeholder='AnimalID' onChange={this.handleTextChange} />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Microchip:</label>\r\n                            <Dropdown\r\n                                placeholder='Please select an option'\r\n                                options={boolOptions}\r\n                                name='mchip'\r\n                                onChange={this.handleDropdownChange} />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Insurance:</label>\r\n                            <Dropdown\r\n                                placeholder='Please select an option'\r\n                                options={boolOptions}\r\n                                name='insurance'\r\n                                onChange={this.handleDropdownChange} />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Please select a payment method:</label>\r\n                            <Dropdown\r\n                                placeholder='Please select an option'\r\n                                options={payOptions}\r\n                                name='paymethod'\r\n                                onChange={this.handleDropdownChange} />\r\n                        </Form.Field>\r\n                        <Link to='/customer-thank-you'>\r\n                            <Button onClick={() => {\r\n                                console.log(this.state)\r\n                                console.log('validate animalid and custid exists, add to transaction and purchase tables')\r\n                                this.makeFetch(this.state)\r\n                                /* \r\n                                ~do request call ~\r\n                                    if error response (\r\n                                        display error\r\n                                    ) else (\r\n                                    navigate to /customer-thank-you\r\n                                )\r\n                            */\r\n                            }}> Submit </Button>\r\n                        </Link>\r\n                    </Form>\r\n                </Grid.Row>\r\n            </Grid>\r\n        );\r\n    };\r\n}\r\n\r\nexport default NewPurchase;\r\n","import React, { Component } from 'react'\r\nimport { Grid, Button, Table, Header } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom'\r\nimport Axios from 'axios';\r\n\r\nexport default class viewInvoices extends Component {\r\n\r\n    state = {\r\n        custid: this.props.location.state,\r\n        trans: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        console.log(this.state)\r\n        await Axios.post('/api/invoice', this.state)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    console.log(response.data)\r\n                    console.log(this.state)\r\n                    this.setState({trans: response.data})\r\n                    \r\n                } else {\r\n                    throw new Error('Something went wrong on api server!');\r\n                }\r\n            }).catch(error => {\r\n                console.error(error);\r\n              });\r\n    }\r\n    createItem = () => {\r\n        let trans = this.state.trans\r\n        console.log(trans)\r\n        if (trans.length > 0) {\r\n            let items = []\r\n            for (var i = 0, len = trans.length; i < len; i++) {\r\n                console.log(trans[i].purrks)\r\n                items.push(\r\n                    <Table.Row key={trans[i].invoiceid}>\r\n                    <Table.Cell>{trans[i].invoiceid}</Table.Cell>\r\n                    <Table.Cell>{trans[i].transid}</Table.Cell>\r\n                    <Table.Cell>{trans[i].payment_method}</Table.Cell>\r\n                    {/* <Table.Cell>{trans[i].date}</Table.Cell>\r\n                    <Table.Cell>{trans[i].animalid}</Table.Cell>\r\n                    <Table.Cell>{trans[i].custid}</Table.Cell> */}\r\n                    </Table.Row>\r\n                  )\r\n            }\r\n            return items\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <Grid>\r\n                <Grid.Row centered>\r\n                <div>\r\n                <Header>display all redeemables for dis customer</Header>\r\n                <h1>{this.state.custid}</h1>\r\n                <Table celled>\r\n                <Table.Header>\r\n                  <Table.Row>\r\n                    <Table.HeaderCell>Invoice ID</Table.HeaderCell>\r\n                    <Table.HeaderCell>Trans ID</Table.HeaderCell>\r\n                    <Table.HeaderCell>Payment Method</Table.HeaderCell>\r\n                    {/* <Table.HeaderCell>Animal ID</Table.HeaderCell>\r\n                    <Table.HeaderCell>Customer ID</Table.HeaderCell> */}\r\n                  </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                  {this.createItem()}\r\n                </Table.Body>\r\n              </Table>\r\n            </div>\r\n                    <h>INVOICES FOR *THIS* CUSTOMER</h>\r\n                    <Link to={ {pathname: '/customer', state: this.state.custid }}>\r\n                        <Button color='yellow'> Click here to return home </Button>\r\n                    </Link>\r\n                </Grid.Row>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\n// const viewInvoices = () => (\r\n//     <div>\r\n//         hello\r\n//     </div>\r\n//     );\r\n\r\n// export default viewInvoices;","import React, { Component } from 'react'\r\nimport { Form, Button, Grid, Header } from 'semantic-ui-react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\n\r\nexport default class CustUpdate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      custid: this.props.location.state,\r\n      name: null,\r\n      address: null,\r\n      pnum: null,\r\n    }\r\n  }\r\n\r\n  handleTextChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  makeFetch = async (data) => {\r\n    console.log(this.props.location.state)\r\n    console.log(this.state.custid)\r\n    const { history } = this.props\r\n    await Axios.post('/api/customers/update', data)\r\n    .then((res) => {\r\n      if (res.status === 500) {\r\n        alert('something wrong, try again')\r\n      } else\r\n        if (res.status === 200) {\r\n          history.push('/customer', res.data)\r\n\r\n        }\r\n    }).catch(e => { \r\n      console.log(e)\r\n    })\r\n}\r\n\r\n  // updateCustomer = (event) => {\r\n  //   event.preventDefault();\r\n\r\n  //   let data = {\r\n  //     custid: this.refs.custid.value,\r\n  //     name: this.refs.name.value,\r\n  //     address: this.refs.address.value,\r\n  //     phoneNum: this.refs.pnum.value\r\n  //   }\r\n  //   console.log(data);\r\n\r\n  //   Send req to server\r\n  //   var request = new Request('http://localhost:3000/api/new-customer', {\r\n  //     method: 'POST',\r\n  //     header: new Headers({ 'Content-Type': 'application/json' }),\r\n  //     body: JSON.stringify(data);\r\n  //   });\r\n\r\n  //   fetch(request)\r\n  //     .then(function (response) {\r\n  //       response.json().then(function (data) {\r\n  //         console.log(data);\r\n  //       })\r\n  //     });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        <Header>\r\n\r\n        </Header>\r\n        <Grid.Row centered>\r\n          <Form>\r\n            <Form.Field>\r\n              <label htmlFor=\"custid\">Enter a 3 Digit Number CustID:</label>\r\n              <input type='number' name='custid' placeholder={this.state.custid} />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label htmlFor=\"name\">Name:</label>\r\n              <input type='text' name='name' placeholder='Name' onChange={this.handleTextChange} />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label htmlFor=\"address\">Address:</label>\r\n              <input type='text' name='address' placeholder='Address' onChange={this.handleTextChange}/>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label htmlFor=\"pnum\">Phone Number:</label>\r\n              <input type='number' name='pnum' placeholder='Phone Number' onChange={this.handleTextChange}/>\r\n            </Form.Field>\r\n            <Link to='/customer'>\r\n              <Button onClick={() => {\r\n                console.log('validate customer table contain custid and then update')\r\n                this.makeFetch(this.state)\r\n              }}>\r\n                Update </Button>\r\n            </Link>\r\n          </Form>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  };\r\n}","import React, { Component } from 'react'\r\nimport { Form, Checkbox, Button, Grid, Header } from 'semantic-ui-react';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\n\r\nclass CustSignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      custid: null,\r\n      name: null,\r\n      address: null,\r\n      pnum: null,\r\n    }\r\n  }\r\n\r\n\r\n  handleTextChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }   \r\n\r\n  async makeFetch(data) {\r\n    const { history } = this.props\r\n    const res = await axios.post('/api/customers/add', data);\r\n    history.push('/customer-login')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        <Header>\r\n\r\n        </Header>\r\n        <Grid.Row centered>\r\n          <Form>\r\n            <Form.Field>\r\n              <label htmlFor=\"username\">Username:</label>\r\n              <input type='text' name='username' placeholder='Username' onChange={this.handleTextChange} />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label htmlFor=\"password\">Password:</label>\r\n              <input type='text' name='password' placeholder='Password' onChange={this.handleTextChange} />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label htmlFor=\"fname\">First name:</label>\r\n              <input type='text' name='fname' placeholder='First name' onChange={this.handleTextChange} />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label htmlFor=\"lname\">Last name:</label>\r\n              <input type='text' name='lname' placeholder='Last name' onChange={this.handleTextChange} />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label htmlFor=\"address\">Address:</label>\r\n              <input type='text' name='address' placeholder='Address' onChange={this.handleTextChange} />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label htmlFor=\"pnum\">Phone Number:</label>\r\n              <input type='text' name='pnum' placeholder='Phone Number' onChange={this.handleTextChange} />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <Checkbox checked='false' label='I agree to the Terms and Conditions. Sign my soul away.' />\r\n            </Form.Field>\r\n            {/* <Link to='/customer-login'> */}\r\n            <Button onClick={() => {this.makeFetch(this.state)}}> Submit </Button>\r\n            {/* </Link> */}\r\n            {/* <Form success>\r\n      <Message success header='Form Completed' content=\"You're all signed up!\" />\r\n      \r\n    </Form> */}\r\n          </Form>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n\r\n  }\r\n}\r\n\r\n\r\n  export default CustSignUp;","import React, { Component } from 'react'\r\nimport { Grid, Button, Item, Label, Icon, Table, Header } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom'\r\nimport Axios from 'axios';\r\n\r\nexport default class RedeemPurks extends Component {\r\n   state = {\r\n            custid: this.props.location.state,\r\n            purrks: [],\r\n        }\r\n    \r\n\r\n    async componentDidMount() {\r\n        console.log(this.state)\r\n        await Axios.post('/api/customers/redeem-purrks', this.state)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                if (response.status === 200) {\r\n                    this.setState({purrks: [response.data]})\r\n                    console.log(this.state)\r\n                } else {\r\n                    throw new Error('Something went wrong on api server!');\r\n                }\r\n            }).catch(error => {\r\n                console.error(error);\r\n              });\r\n    }\r\n\r\n    createItem = () => {\r\n        let trans = this.state.purrks\r\n        console.log(trans)\r\n        if (trans.length > 0) {\r\n            let items = []\r\n            for (var i = 0, len = trans.length; i < len; i++) {\r\n                console.log(trans[i].purrks)\r\n                items.push(\r\n                    <Table.Row key={trans[i].points_required}>\r\n                    <Table.Cell>{trans[i].points_required}</Table.Cell>\r\n                    <Table.Cell>{trans[i].info}</Table.Cell>\r\n                    {/* <Table.Cell>{trans[i].date}</Table.Cell>\r\n                    <Table.Cell>{trans[i].animalid}</Table.Cell>\r\n                    <Table.Cell>{trans[i].custid}</Table.Cell> */}\r\n                    </Table.Row>\r\n                  )\r\n            }\r\n            return items\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header>display all redeemables for dis customer</Header>\r\n                <h1>{this.state.custid}</h1>\r\n                <Table celled>\r\n                <Table.Header>\r\n                  <Table.Row>\r\n                    <Table.HeaderCell>Points Required</Table.HeaderCell>\r\n                    <Table.HeaderCell>Redeemable</Table.HeaderCell>\r\n                    {/* <Table.HeaderCell>Date</Table.HeaderCell>\r\n                    <Table.HeaderCell>Animal ID</Table.HeaderCell>\r\n                    <Table.HeaderCell>Customer ID</Table.HeaderCell> */}\r\n                  </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                  {this.createItem()}\r\n                </Table.Body>\r\n              </Table>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Form, Button, Grid, Header } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class EmpLogin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { empid: '' }\r\n    }\r\n\r\n    getID = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    makeFetch = async (data) => {\r\n        const { history } = this.props\r\n        await axios.post('/api/purrents/login', data)\r\n        .then(res => {\r\n            if(res.status === 500) {\r\n                alert('Prob');\r\n            } else if (res.status === 200) {\r\n                history.push('/purrent', res.data)\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid>\r\n                <Header>\r\n\r\n                </Header>\r\n                <Grid.Row centered>\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label htmlFor=\"empid\">Enter your 3 Digit Number EmpID:</label>\r\n                            <input type='text' name='empid' placeholder='empid' onChange={this.getID}/>\r\n                        </Form.Field>\r\n\r\n                        {/* <Link to={{ pathname: '/purrent', state: this.state.empid }}> */}\r\n                            <Button onClick={()=>this.makeFetch(this.state)}> Login </Button>\r\n                        {/* </Link> */}\r\n                        {/* <Form success>\r\n                <Message success header='Form Completed' content=\"You're all signed up!\" /> */}\r\n                    </Form>\r\n                </Grid.Row>\r\n            </Grid>\r\n        );\r\n    };\r\n}","import React, { Component } from 'react'\r\nimport { Button, Form, Grid, Header, Dropdown } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\n/* i don't know if it's better to query the options from our db or to include them here.\r\nit's much easier if we do it this way but idk if we'll get docked marks for hardcoding them\r\ninstead of querying them from our db */\r\n\r\nconst animalOptions = [\r\n    {\r\n        key: 'Furry',\r\n        text: 'Furry',\r\n        value: 'furry'\r\n    },\r\n    {\r\n        key: 'Feathery',\r\n        text: 'Feathery',\r\n        value: 'feathery'\r\n    },\r\n    {\r\n        key: 'Scaly',\r\n        text: 'Scaly',\r\n        value: 'scaly'\r\n    }\r\n]\r\n\r\nconst dietOptions = [\r\n    {\r\n        key: 'vegan',\r\n        text: 'Vegan',\r\n        value: 'vegan'\r\n    },\r\n    {\r\n        key: 'paleo',\r\n        text: 'Paleo',\r\n        value: 'paleo'\r\n    },\r\n    {\r\n        key: 'meat',\r\n        text: 'Meat Only',\r\n        value: 'meat'\r\n    },\r\n    {\r\n        key: 'glutenfree',\r\n        text: 'Gluten-Free',\r\n        value: 'glutenfree'\r\n    },\r\n    {\r\n        key: 'vegetarian',\r\n        text: 'Vegetarian',\r\n        value: 'veg'\r\n    }\r\n]\r\n\r\nconst blidOptions = [\r\n    { key: 69, value: 69, text: 69 },\r\n    { key: 70, value: 70, text: 70 },\r\n    { key: 71, value: 71, text: 71 },\r\n    { key: 72, value: 72, text: 72 },\r\n    { key: 73, value: 73, text: 73 },\r\n]\r\n\r\n\r\nexport default class AddAnimal extends Component {\r\n    state = {\r\n        animalid: null,\r\n        animaltype: null,\r\n        diet: null,\r\n        blid: null,\r\n        clinid: null,\r\n        packageid: null,\r\n    }\r\n    handleTextChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value }, console.log(this.state))\r\n    }\r\n    handleDropdownChange = (e, data) => {\r\n        this.setState({ [data.name]: data.value }, console.log(this.state))\r\n    }\r\n    makeFetch = async (data) => {\r\n        console.log(data);\r\n        const { history } = this.props;\r\n        \r\n        await Axios.post('/api/purrents/add', data)\r\n        .then(response => {\r\n          if (response.status === 500) {\r\n            alert('Add unsucessful');\r\n          } else if(response.status === 200) {\r\n            history.push('/purrent', response.data);\r\n          }\r\n        }).catch(error => {\r\n            console.error(error);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <Grid>\r\n                <Grid.Row centered>\r\n                    <Header />\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label htmlFor='animalid'>Enter a 3 Digit AnimalID:</label>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Animal ID'\r\n                                name='animalid'\r\n                                onChange={this.handleTextChange} />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label htmlFor='animaltype'>Type of Animal:</label>\r\n                            <Dropdown\r\n                                type='text'\r\n                                placeholder='Select type of animal'\r\n                                name='animaltype'\r\n                                options={animalOptions}\r\n                                onChange={this.handleDropdownChange}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label htmlFor='diet'> Diet:</label>\r\n                            <Dropdown\r\n                                type='string'\r\n                                placeholder='Select type of diet'\r\n                                options={dietOptions}\r\n                                name='diet'\r\n                                onChange={this.handleDropdownChange} />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Home Fungeon: (options should be queried from db)</label>\r\n                            <Dropdown\r\n                                placeholder='Select a fungeon location'\r\n                                options={blidOptions}\r\n                                name='blid'\r\n                                onChange={this.handleDropdownChange} />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Clinic: (options should be queried from db)</label>\r\n                            <Dropdown placeholder='Select a clinic' options={null} name='clinid' />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Care Package: (options should be queried from db)</label>\r\n                            <Dropdown placeholder='Select a care package' options={null} name='packageid' />\r\n                        </Form.Field>\r\n                        <Link to='/purrent'>\r\n                            <Button color='orange' onClick={() => {\r\n                                this.makeFetch(this.state)\r\n                            }}> Submit </Button>\r\n                        </Link>\r\n                    </Form>\r\n                </Grid.Row>\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n}","import React, { Component } from 'react'\r\nimport { Button, Form, Grid, Header, Dropdown } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nconst animalOptions = [\r\n    {\r\n        key: 'Furry',\r\n        text: 'Furry',\r\n        value: 'furry'\r\n    },\r\n    {\r\n        key: 'Feathery',\r\n        text: 'Feathery',\r\n        value: 'feathery'\r\n    },\r\n    {\r\n        key: 'Scaly',\r\n        text: 'Scaly',\r\n        value: 'scaly'\r\n    }       \r\n]\r\n\r\nconst dietOptions = [\r\n    {\r\n        key: 'vegan',\r\n        text: 'Vegan',\r\n        value: 'vegan'\r\n    },\r\n    {\r\n        key: 'paleo',\r\n        text: 'Paleo',\r\n        value: 'paleo'\r\n    },\r\n    {\r\n        key: 'meat',\r\n        text: 'Meat Only',\r\n        value: 'meat'\r\n    },\r\n    {\r\n        key: 'glutenfree',\r\n        text: 'Gluten-Free',\r\n        value: 'glutenfree'\r\n    },\r\n    {\r\n        key: 'vegetarian',\r\n        text: 'Vegetarian',\r\n        value: 'veg'\r\n    }\r\n]\r\n\r\nconst blidOptions = [\r\n    { key: 69, value: 69, text: 69 },\r\n    { key: 70, value: 70, text: 70 },\r\n    { key: 71, value: 71, text: 71 },\r\n    { key: 72, value: 72, text: 72 },\r\n    { key: 73, value: 73, text: 73 },\r\n]\r\n\r\n\r\nexport default class UpdateAnimal extends Component {\r\n    state = {\r\n        animalid: null,\r\n        animaltype: null,\r\n        diet: null,\r\n        blid: null,\r\n        clinid: null,\r\n        packageid: null,\r\n    }\r\n    \r\n    makeFetch = async (data) => {\r\n        console.log(data);\r\n        const {history} = this.props;\r\n        \r\n        await Axios.post('/api/purrents/update-animal', data)\r\n        .then(response => {\r\n          if (response.status === 500) {\r\n              alert('Was not able to update animal');\r\n          } else if(response.status === 200) {\r\n              history.push('/purrent', response.data)\r\n          }\r\n        }).catch(error => {\r\n            console.error(error);\r\n          });   \r\n    }\r\n    handleTextChange = e => {\r\n        this.setState({[e.target.name]: e.target.value}, console.log(this.state))      \r\n    }\r\n    handleDropdownChange = (e, data) => {\r\n        this.setState({[data.name] : data.value }, console.log(this.state))\r\n    }\r\n    render() {\r\n        const { value } = this.state\r\n        return (\r\n    <Grid>\r\n        <Grid.Row centered>\r\n            <Header/>\r\n            <Form>\r\n                <Form.Field>\r\n                    <label htmlFor='animalid'>Enter a 3 Digit AnimalID:</label>\r\n                    <input \r\n                        type='text' \r\n                        placeholder='Animal ID' \r\n                        name='animalid' \r\n                        onChange={this.handleTextChange}/>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <label htmlFor='animaltype'>Type of Animal:</label>\r\n                    <Dropdown \r\n                        type='text' \r\n                        placeholder='Select type of animal'\r\n                        name='animaltype'\r\n                        options={animalOptions}\r\n                        onChange={this.handleDropdownChange}\r\n                        />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                     <label htmlFor='diet'> Diet:</label>\r\n                     <Dropdown \r\n                        type='string' \r\n                        placeholder='Select type of diet' \r\n                        options={dietOptions} \r\n                        name='diet'\r\n                        onChange={this.handleDropdownChange}/>\r\n                  </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Home Fungeon: (options should be queried from db)</label>\r\n                        <Dropdown \r\n                            placeholder='Select a fungeon location' \r\n                            options={blidOptions} \r\n                            name='blid'\r\n                            onChange={this.handleDropdownChange}/>\r\n                    </Form.Field>\r\n                   <Form.Field>\r\n                       <label>Clinic: (options should be queried from db)</label>\r\n                       <Dropdown placeholder='Select a clinic' options={null} name='clinid'/>\r\n                   </Form.Field>\r\n                   <Form.Field>\r\n                       <label>Care Package: (options should be queried from db)</label>\r\n                       <Dropdown placeholder='Select a care package' options={null} name='packageid'/>\r\n                   </Form.Field>\r\n                   <Link to='/purrent'>\r\n                   <Button color='orange' onClick={() => { \r\n                       this.makeFetch(this.state)\r\n                   }}> Update </Button>\r\n                   </Link>\r\n            </Form>\r\n        </Grid.Row>\r\n    </Grid>\r\n        );\r\n    };\r\n\r\n}","import React, { Component } from 'react'\r\nimport { Button, Form, Grid, Header, Dropdown } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\n/* i don't know if it's better to query the options from our db or to include them here.\r\nit's much easier if we do it this way but idk if we'll get docked marks for hardcoding them\r\ninstead of querying them from our db */\r\n\r\nconst workerOptions = [\r\n    { key: 1, text: 'Manager', value: 1 },\r\n    { key: 2, text: 'Caretaker', value: 2 },\r\n    { key: 3, text: 'Admin', value: 3 }\r\n]\r\n\r\nconst blidOptions = [\r\n    { key: 69, value: 69, text: 69 },\r\n    { key: 70, value: 70, text: 70 },\r\n    { key: 71, value: 71, text: 71 },\r\n    { key: 72, value: 72, text: 72 },\r\n    { key: 73, value: 73, text: 73 },\r\n]\r\n\r\nexport default class AddEmp extends Component {\r\n    state = {\r\n        empid: null,\r\n        addr: null,\r\n        workerid: null,\r\n        salary: null,\r\n        blid: '000',\r\n        phone: null\r\n    }\r\n    handleTextChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value }, console.log(this.state))\r\n    }\r\n    handleDropdownChange = (e, data) => {\r\n        this.setState({ [data.name]: data.value }, console.log(this.state))\r\n\r\n    }\r\n    makeFetch = async (data) => {\r\n        // console.log('this is from a method') \r\n        const { history } = this.props;\r\n        console.log(data)\r\n        await Axios.post('/api/purrents/add', data)\r\n          .then(response => {\r\n            if (response.status === 500) {\r\n              alert('Something went wrong');\r\n            } else if (response.status === 200) {\r\n              history.push('/purrent', response.data);\r\n            }\r\n          }).catch(error => {\r\n            console.log(error);\r\n          });\r\n      }\r\n\r\n    render() {\r\n        // const { value } = this.state\r\n        return (\r\n            <Grid>\r\n                <Grid.Row centered>\r\n                    <Header />\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label htmlFor='empid'>Enter a 3 Digit Employee ID:</label>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Employee ID'\r\n                                name='empid'\r\n                                onChange={this.handleTextChange} />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label htmlFor='addr'>Address:</label>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Enter Address'\r\n                                name='addr'\r\n                                onChange={this.handleTextChange}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label htmlFor='addr'>Phone Number:</label>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Enter a phone number'\r\n                                name='phone'\r\n                                onChange={this.handleTextChange}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label htmlFor='workerid'> Type of Worker:</label>\r\n                            <Dropdown\r\n                                type='string'\r\n                                placeholder='Select type of worker'\r\n                                options={workerOptions}\r\n                                name='workertype'\r\n                                onChange={this.handleDropdownChange} />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Salary:</label>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Enter starting salary:'\r\n                                name='salary'\r\n                                onChange={this.handleTextChange} />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Home Fungeon:</label>\r\n                            <Dropdown\r\n                                placeholder='Select a fungeon location'\r\n                                options={blidOptions}\r\n                                name='blid'\r\n                                onChange={this.handleDropdownChange} />\r\n                        </Form.Field>\r\n                        {/* <Link to='/purrent'> */}\r\n                            <Button color='green' onClick={() => {this.makeFetch(this.state)}}> Submit </Button>\r\n                        {/* </Link> */}\r\n                    </Form>\r\n                </Grid.Row>\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n}","import React, { Component } from 'react'\r\nimport { Button, Form, Grid, Header, Dropdown } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\n/* i don't know if it's better to query the options from our db or to include them here.\r\nit's much easier if we do it this way but idk if we'll get docked marks for hardcoding them\r\ninstead of querying them from our db */\r\n\r\nconst workerOptions = [\r\n    { key: 1, text: 'Manager', value: 1 },\r\n    { key: 2, text: 'Caretaker', value: 2 },\r\n    { key: 3, text: 'Admin', value: 3 }\r\n]\r\n\r\nconst blidOptions = [\r\n    { key: 69, value: 69, text: 69 },\r\n    { key: 70, value: 70, text: 70 },\r\n    { key: 71, value: 71, text: 71 },\r\n    { key: 72, value: 72, text: 72 },\r\n    { key: 73, value: 73, text: 73 },\r\n]\r\n\r\n\r\nexport default class UpdateEmp extends Component {\r\n    state = {\r\n        empid: this.props.location.state,\r\n        addr: null,\r\n        workertype: null,\r\n        salary: null,\r\n        blid: '000',\r\n        phone: null\r\n    }\r\n    handleTextChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value }, console.log(this.state))\r\n    }\r\n    handleDropdownChange = (e, data) => {\r\n        this.setState({ [data.name]: data.value }, console.log(this.state))\r\n\r\n    }\r\n    \r\n    makeFetch = async (data) => {\r\n        // console.log('this is from a method')\r\n        console.log(data);\r\n        const {history} = this.props;\r\n        \r\n        await Axios.post('/api/purrents/update', data)\r\n          .then(response => {\r\n            if (response.status === 500) {\r\n                alert('something wrong, try again');\r\n            } else if(response.status === 200) {\r\n                history.push('/purrent', response.data);\r\n            }\r\n          }).catch(error => {\r\n            console.log(error);\r\n          });\r\n    }\r\n\r\n    render() {\r\n        const { value } = this.state\r\n        return (\r\n            <Grid>\r\n                <Grid.Row centered>\r\n                    <Header />\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label htmlFor='empid'>Enter a 3 Digit Employee ID:</label>\r\n                            <input\r\n                                type='text'\r\n                                placeholder={this.state.empid}\r\n                                name='empid'\r\n                                onChange={this.handleTextChange} />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label htmlFor='addr'>Address:</label>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Enter Address'\r\n                                name='addr'\r\n                                onChange={this.handleTextChange}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label htmlFor='addr'>Phone Number:</label>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Enter a phone number'\r\n                                name='phone'\r\n                                onChange={this.handleTextChange}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label htmlFor='workertype'> Type of Worker:</label>\r\n                            <Dropdown\r\n                                type='string'\r\n                                placeholder='Select type of worker'\r\n                                options={workerOptions}\r\n                                name='workertype'\r\n                                onChange={this.handleDropdownChange} />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Salary:</label>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Enter starting salary:'\r\n                                name='salary'\r\n                                onChange={this.handleTextChange} />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Home Fungeon:</label>\r\n                            <Dropdown\r\n                                placeholder='Select a fungeon location'\r\n                                options={blidOptions}\r\n                                name='blid'\r\n                                onChange={this.handleDropdownChange} />\r\n                        </Form.Field>\r\n                        <Link to='/purrent'>\r\n                            <Button color='green' onClick={() => {this.makeFetch(this.state)}}> Update </Button>\r\n                        </Link>\r\n                    </Form>\r\n                </Grid.Row>\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n}","import React, { Component } from 'react'\r\nimport { Button, Form, Grid, Header } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios'\r\n\r\nexport default class DeleteEmp extends Component {\r\n    state = {\r\n        empid: ''\r\n    }\r\n    handleTextChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value }, console.log(this.state))\r\n    }\r\n\r\n    makeFetch = async (data) => {\r\n        // console.log('this is from a method') \r\n        const { history } = this.props;\r\n        console.log(data)\r\n        await Axios.post('/api/purrents/delete-cust', data)\r\n          .then(response => {\r\n            if (response.status === 500 || \r\n                response.status === 400) {\r\n              alert('Something went wrong');\r\n            } else if (response.status === 200) {\r\n              history.push('/purrent', response.data);\r\n            }\r\n          }).catch(error => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    render() {\r\n        return (\r\n        <Grid>\r\n        <Grid.Row centered>\r\n            <Header />\r\n            <Form>\r\n                <Form.Field>\r\n                    <label htmlFor='empid'>Enter a 3 Digit Employee ID:</label>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Employee ID'\r\n                        name='empid'\r\n                        onChange={this.handleTextChange} />\r\n                </Form.Field>\r\n                {/* <Link to='/purrent'> */}\r\n                    <Button color='green' onClick={() => this.makeFetch(this.state)}> Delete Employee </Button>\r\n                {/* </Link> */}\r\n            </Form>\r\n        </Grid.Row>\r\n    </Grid>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Button, Form, Grid, Header } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nexport default class DeleteCust extends Component {\r\n    state = {\r\n        custid: ''\r\n    }\r\n    handleTextChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value }, console.log(this.state))\r\n    }\r\n\r\n    makeFetch = async (data) => {\r\n        // console.log('this is from a method') \r\n        const { history } = this.props;\r\n        console.log(data)\r\n        await Axios.post('/api/purrents/delete-cust', data)\r\n          .then(response => {\r\n            if (response.status === 500 || \r\n                response.status === 400) {\r\n              alert('Something went wrong');\r\n            } else if (response.status === 200) {\r\n              history.push('/purrent', response.data);\r\n            }\r\n          }).catch(error => {\r\n            console.log(error);\r\n          });\r\n      }\r\n\r\n    render() {\r\n        return (\r\n        <Grid>\r\n        <Grid.Row centered>\r\n            <Header />\r\n            <Form>\r\n                <Form.Field>\r\n                    <label htmlFor='empid'>Enter a 3 Digit Customer ID:</label>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Customer ID'\r\n                        name='custid'\r\n                        onChange={this.handleTextChange} />\r\n                </Form.Field>\r\n                {/* <Link to='/purrent'> */}\r\n                    <Button color='green' onClick={() => this.makeFetch(this.state)}> Delete Customer </Button>\r\n                {/* </Link> */}\r\n            </Form>\r\n        </Grid.Row>\r\n    </Grid>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { Grid, Header, Button } from 'semantic-ui-react';\r\n\r\nexport default class ThankYou extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Grid>\r\n                <Grid.Row centered>\r\n                <Header>\r\n                    Thank you for supporting our PAWESOME FRIENDS\r\n                </Header>\r\n                <Link to='/customer'>\r\n                    <Button color='yellow'> Click here to return home </Button>\r\n                </Link>\r\n                </Grid.Row>\r\n            </Grid>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Form, Button, Grid, Header } from 'semantic-ui-react';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { async } from 'q';\r\n\r\nclass AddCust extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      custid: '',\r\n      name: '',\r\n      address: '',\r\n      pnum: ''\r\n    }\r\n  }\r\n\r\n  handleTextChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }   \r\n\r\n  makeFetch = async (data) => {\r\n    // console.log(this.state)\r\n    const { history } = this.props\r\n    const res = await axios.post('/api/customers/add', data);\r\n    if (res.status === 200){\r\n      alert('success')\r\n          history.push('/purrent')\r\n        } \r\n        else {\r\n          console.log('o no')\r\n        }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        <Header>\r\n\r\n        </Header>\r\n        <Grid.Row centered>\r\n          <Form>\r\n            <Form.Field>\r\n              <label htmlFor=\"custid\">Enter a 3 Digit Number CustID:</label>\r\n              <input type='number' name='custid' placeholder='CustID' onChange={this.handleTextChange}/>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label htmlFor=\"name\">Name:</label>\r\n              <input type='text' name='name' placeholder='Name' onChange={this.handleTextChange}/>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label htmlFor=\"address\">Address:</label>\r\n              <input type='text' name='address' placeholder='Address' onChange={this.handleTextChange}/>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label htmlFor=\"pnum\">Phone Number:</label>\r\n              <input type='number' name='pnum' placeholder='Phone Number' onChange={this.handleTextChange}/>\r\n            </Form.Field>\r\n            <Link to='/purrent'>\r\n              <Button onClick={() => {this.makeFetch(this.state)}}>\r\n                Add Customer </Button>\r\n            </Link>\r\n          </Form>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  };\r\n}\r\n\r\nexport default AddCust;","import React, { Component } from 'react'\r\nimport { Dropdown, Button, Form, Grid, Header } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst payOptions = [\r\n    { key: 'visa', value: 'visa', text: 'Visa' },\r\n    { key: 'mc', value: 'mc', text: 'Mastercard' },\r\n    { key: 'debit', value: 'debit', text: 'Debit' }\r\n]\r\n\r\nclass NewRental extends Component {\r\n\r\n    state = {\r\n        custid: this.props.location.state,\r\n        animalid: null,\r\n        start: null,\r\n        end: null,\r\n        paymethod: null,\r\n    }\r\n\r\n    handleTextChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n    handleDropdownChange = (e, data) => {\r\n        this.setState({ [data.name]: data.value })\r\n\r\n    }\r\n    makeFetch(data) {\r\n        console.log(data);\r\n        var request = new Request('http://localhost:3000/api/customers/new-rental', {\r\n            method: 'PUT',\r\n            header: new Headers( { 'Content-Type': 'application/json'}),\r\n            body: JSON.stringify(data)\r\n        });\r\n        fetch(request)\r\n        .then(response => {\r\n          if (response.status === 200) {\r\n            return response.json();\r\n          } else {\r\n            throw new Error('Something went wrong on api server!');\r\n          }\r\n        }).catch(error => {\r\n            console.error(error);\r\n          });\r\n        \r\n    }\r\n    \r\n    render() {     \r\n        return (\r\n            <Grid>\r\n                <Grid.Row centered>\r\n                    <Header />\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label>CustID:</label>\r\n                            <input placeholder='CustID' name='custid' onChange={this.handleTextChange}/>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>AnimalID:</label>\r\n                            <input type='text' name='animalid' placeholder='AnimalID' onChange={this.handleTextChange}/>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label htmlFor=\"pnum\">Start Date:</label>\r\n                            <input type='text' name='start' placeholder='(YYYY-MM-DD)' onChange={this.handleTextChange}/>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label htmlFor=\"pnum\">Return Date:</label>\r\n                            <input type='text' name='end' placeholder='(YYYY-MM-DD)' onChange={this.handleTextChange}/>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Please select a payment method:</label>\r\n                            <Dropdown\r\n                                placeholder='Please select an option'\r\n                                options={payOptions}\r\n                                name='paymethod'\r\n                                onChange={this.handleDropdownChange} />\r\n                        </Form.Field>\r\n                        <Link to='/customer-thank-you'>\r\n                            <Button onClick={() => {\r\n                                console.log(this.state)\r\n                                console.log('validate animalid and custid exists, add to transaction and rental tables')\r\n                                this.makeFetch(this.state)\r\n                            }}> Submit </Button>\r\n                        </Link>\r\n                    </Form>\r\n                </Grid.Row>\r\n            </Grid>\r\n        );\r\n    };\r\n}\r\n\r\nexport default NewRental;\r\n","import React, { Component } from 'react'\r\nimport { Item, Header, Table } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport { async } from 'q';\r\nexport default class ViewTrans extends Component {\r\n\r\n    state = {\r\n        custid: this.props.location.state,\r\n        transactions: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await axios.post('/api/transactions', this.state)\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                this.setState({transactions: res.data});\r\n            } else \r\n                alert('ooops')\r\n        });\r\n    }\r\n\r\n    createItem = () => {\r\n        let trans = this.state.transactions\r\n        if (trans.length > 1) {\r\n            let items = []\r\n            for (var i = 0, len = trans.length; i < len; i++) {\r\n                items.push(\r\n                    <Table.Row key={trans[i].transid}>\r\n                    <Table.Cell>{trans[i].transid}</Table.Cell>\r\n                    <Table.Cell>{trans[i].price}</Table.Cell>\r\n                    <Table.Cell>{trans[i].date}</Table.Cell>\r\n                    <Table.Cell>{trans[i].animalid}</Table.Cell>\r\n                    <Table.Cell>{trans[i].custid}</Table.Cell>\r\n                    </Table.Row>\r\n                  )\r\n            }\r\n            return items\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header>display all transactions for dis customer</Header>\r\n                <h1>{this.state.custid}</h1>\r\n                <Table celled>\r\n                <Table.Header>\r\n                  <Table.Row>\r\n                    <Table.HeaderCell>Transaction ID</Table.HeaderCell>\r\n                    <Table.HeaderCell>Price</Table.HeaderCell>\r\n                    <Table.HeaderCell>Date</Table.HeaderCell>\r\n                    <Table.HeaderCell>Animal ID</Table.HeaderCell>\r\n                    <Table.HeaderCell>Customer ID</Table.HeaderCell>\r\n                  </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                  {this.createItem()}\r\n                </Table.Body>\r\n              </Table>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\n\r\nimport Home from './components/Home';\r\n\r\nimport CustomerView from \"./components/Customer/CustomerView\";\r\nimport PurrentView from './components/Purrent/PurrentView';\r\nimport Login from './components/Customer/Login';\r\nimport NewPurchase from './components/Customer/Transaction/NewPurchase';\r\nimport viewInvoices from './components/Customer/ViewInformation.jsx/viewInvoices';\r\nimport CustUpdate from './components/Customer/AccManagement/CustUpdate';\r\nimport CustSignUp from './components/Customer/AccManagement/CustSignUp';\r\nimport RedeemPurks from './components/Customer/ViewInformation.jsx/RedeemPurrks';\r\n\r\nimport EmpLogin from './components/Purrent/EmpLogin';\r\nimport AddAnimal from './components/Purrent/AnimalManagement/AddAnimal';\r\nimport UpdateAnimal from './components/Purrent/AnimalManagement/UpdateAnimal';\r\nimport AddEmp from './components/Purrent/EmpManagement/AddEmp';\r\nimport UpdateEmp from './components/Purrent/EmpManagement/UpdateEmp';\r\nimport DeleteEmp from './components/Purrent/EmpManagement/DeleteEmp';\r\nimport DeleteCust from './components/Purrent/CustManagement/DeleteCust';\r\nimport ThankYou from './components/Customer/Transaction/ThankYou';\r\nimport AddCust from './components/Purrent/CustManagement/AddCust';\r\nimport Statistics from './components/Statistics';\r\nimport NewRental from './components/Customer/Transaction/newRental';\r\nimport TAnimalInfo from './components/Customer/HomeTabs/TAnimalInfo';\r\nimport ViewTrans from './components/Customer/ViewInformation.jsx/ViewTrans';\r\n\r\n\r\nclass ui_test extends Component {\r\n\trender() {\r\n\t\treturn(\t\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Route path=\"/\" component={Home} exact />\r\n\t\t\t\t\t<Route path=\"/customer\" component={CustomerView} exact />\t\t\t\t\t\r\n\t\t\t\t\t<Route path='/login' component={Login} />\r\n\t\t\t\t\t<Route path=\"/customer-signup\" component={CustSignUp}/>\r\n\t\t\t\t\t<Route path='/customer-invoices' component={viewInvoices}/>\r\n\t\t\t\t\t<Route path='/customer-update' component={CustUpdate} />\r\n\t\t\t\t\t<Route path='/customer-redeempurrks' component={RedeemPurks}/>\r\n\t\t\t\t\t<Route path='/customer-thank-you' component={ThankYou}/>\r\n\t\t\t\t\t<Route path='/customer-transactions' component={ViewTrans}/>\r\n\r\n\t\t\t\t\t{/* PURRENT PAGES */}\r\n\r\n\t\t\t\t\t<Route path=\"/purrent\" component={PurrentView} exact />\r\n\t\t\t\t\t<Route path='/purrent-login' component={EmpLogin} />\r\n\t\t\t\t\t<Route path='/new-purrent' component={AddEmp}/>\r\n\t\t\t\t\t<Route path='/update-purrent' component={UpdateEmp}/>\r\n\t\t\t\t\t<Route path='/remove-purrent' component={DeleteEmp}/>\r\n\t\t\t\t\t<Route path='/add-customer' component={AddCust}/>\r\n\t\t\t\t\t<Route path='/remove-customer' component={DeleteCust}/>\r\n\r\n\t\t\t\t\t<Route path='/new-animal' component={AddAnimal}/>\r\n\t\t\t\t\t<Route path='/update-animal' component={UpdateAnimal}/>\r\n\r\n\t\t\t\t\t<Route path='/new-rental' component={NewRental} />\r\n\t\t\t\t\t<Route path='/new-purrchase' component={NewPurchase} />\r\n\t\t\t\t\t<Route path='/statistics' component={Statistics} />\r\n\t\t\t\t</div>\r\n\t\t\t</BrowserRouter>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ui_test;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}